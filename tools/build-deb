#!/bin/sh

set -e

sourcename="curtin"
TEMP_D=""
UNCOMMITTED=${UNCOMMITTED:-0}
RELEASE=${RELEASE:-UNRELEASED}

fail() { echo "$@" 1>&2; exit 1; }
cleanup() {
   [ -z "$TEMP_D" ] || rm -Rf "$TEMP_D"
}

if [ "$1" = "-h" -o "$1" = "--help" ]; then
   cat <<EOF
Usage: ${0##*/}
   build a deb of from trunk directory
   any options are passed straight through to debuild

   Example:
    * ${0##*/} -us -uc

   Its not significantly different than what you'd get by modifying
   the debian/changelog to have the current revno, and then running
     debuild --no-tgz-check
EOF
exit
fi

bname=${0##*/}

start_d=$PWD
top_d=$(cd "$(dirname "${0}")"/.. && pwd)

# grab the first line in the changelog
# hopefully this pulls the version info there
# resulting in something like: 0.1.0~bzrREVNO-1~trunk1
clogver_o=$(sed -n '1s,.*(\([^)]*\)).*,\1,p' debian/changelog.trunk)

revno=$(bzr revno) || fail "failed to get revno"
clogver_upstream=${clogver_o%%-*}
clogver_debian=${clogver_o#*-}

# uver_bzr gets 17.1~bzr<revno>
uver_bzr=$(echo "${clogver_upstream}" | sed "s,REVNO,$revno,")
# uver_rel gets '17.1'
uver_rel=$(echo "${clogver_upstream}" | sed 's,~bzrREVNO,,')

tag_revno=$(bzr tags | awk '$1 == v { print $2 }' v="${uver_rel}")
if [ "${tag_revno}" = "$revno" ]; then
    # if this is a tag, then drop ~bzrXXX from the changelog version.
    echo "Building a tag of upstream version ($uver_rel -> $revno)" 1>&2
    clogver_new="${uver}-${clogver_debian}"
    uver="${uver_rel}"
    export_string="tag:${uver_rel}"
else
    uver="${uver_bzr}"
    export_string="$revno"
fi
clogver_new="${uver}-${clogver_debian}"

TEMP_D=$(mktemp -d "${TMPDIR:-/tmp}/${bname}.XXXXXX")

trap cleanup EXIT

echo "building upstream version $uver, debian ver=${clogver_debian}"

dir="${sourcename}-$uver"
tarball="${sourcename}_$uver.orig.tar.gz"

myd=$(dirname "$0")
"$myd/export-tarball" "${export_string}" "${TEMP_D}/$tarball"
echo "created ${tarball}"

cd "${TEMP_D}"
tar xzf "$tarball" || fail "failed extract tarball"

if [ ! -d "$dir" ]; then
    # export-tarball will create the directory name based on the
    # contents of debian/changelog.trunk in the version provided.
    # if that differs from what is here, then user has changes.
    for d in ${sourcename}*; do
        [ -d "$d" ] && break
    done
    if [ -d "$d" ]; then
        {
        echo "WARNING: bzr at '${export_string}' had different version"
        echo "  in debian/changelog.trunk than your tree. version there"
        echo "  is '$d' working directory had $uver"
        } 1>&2
        dir=$d
    else
        echo "did not find a directory created by export-tarball. sorry." 1>&2
        exit
    fi
fi
cd "$dir" || fail "failed cd $dir"

# move files ending in .trunk to name without .trunk
# ie, this copies debian/changelog.trunk to debian/changelog
for f in debian/*.trunk; do
   mv "$f" "${f%.trunk}"
done

# first line of debian/changelog looks like
#   curtin (<version>) UNRELEASED; urgency=low
# fix the version and UNRELEASED
sed -i -e "1s,([^)]*),(${clogver_new})," \
       -e "1s,UNRELEASED,${RELEASE}," debian/changelog ||
   fail "failed to write debian/changelog"
debuild "$@" || fail "debuild failed"

cd "$TEMP_D"
for f in *; do
   [ -f "$f" ] || continue
   cp "$f" "$start_d" || fail "failed copy $f"
   echo "wrote $f"
done
exit
